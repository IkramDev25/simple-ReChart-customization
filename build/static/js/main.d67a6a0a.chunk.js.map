{"version":3,"sources":["Chart1.jsx","App.js","serviceWorker.js","index.js"],"names":["data","name","uv","pv","amt","data1","CustomTooltip","active","payload","label","style","backgroundColor","value","color","boxShadow","borderRadius","padding","CustomizedDot","props","cx","cy","x","y","width","height","r","stroke","strokeWidth","fill","CustomizedActiveDot","Example","borderTop","borderBottom","display","justifyContent","alignItems","flex","fontSize","borderRight","fontWeight","margin","top","right","bottom","left","strokeDasharray","horizontal","dataKey","interval","tick","content","type","activeDot","dot","map","_data","index","innerRadius","outerRadius","barSize","key","minAngle","background","clockWise","Number","PureComponent","jsfiddleUrl","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d67a6a0a.chunk.js","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport {\r\n  LineChart,\r\n  Line,\r\n  XAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  RadialBarChart,\r\n  RadialBar\r\n} from 'recharts';\r\n\r\nconst data = [\r\n  {\r\n    name: '22 Mon', uv: 4000, pv: 2400, amt: 2700,\r\n  },\r\n  {\r\n    name: '23 Tue', uv: 3000, pv: 1398, amt: 2700,\r\n  },\r\n  {\r\n    name: '24 Wed', uv: 2000, pv: 9800, amt: 2700,\r\n  },\r\n  {\r\n    name: '25 Thu', uv: 2780, pv: 3908, amt: 2700,\r\n  },\r\n  {\r\n    name: '26 Fri', uv: 1890, pv: 4800, amt: 2700,\r\n  },\r\n  {\r\n    name: '27 Sat', uv: 2390, pv: 3800, amt: 2700,\r\n  },\r\n  {\r\n    name: '28 Sun', uv: 3490, pv: 4300, amt: 2700,\r\n  },\r\n  {\r\n    name: '29 Mon', uv: 2490, pv: 1340, amt: 2700,\r\n  },\r\n  {\r\n    name: '30 Tue', uv: 3190, pv: 2300, amt: 2700,\r\n  },\r\n  {\r\n    name: '31 Wed', uv: 490, pv: 1300, amt: 2700,\r\n  },\r\n];\r\nconst data1 = \r\n    {\r\n      name: '22 Mon', uv: 4000, pv: 2700, amt: 2700,\r\n    }\r\n  \r\n\r\nconst CustomTooltip = ({ active, payload, label }) => {\r\n  if (active) {\r\n    return (\r\n      <div style = {{\r\n                backgroundColor: payload[0].value > 2700 ? \"#FF9457\" : \"black\",\r\n                color:\"white\",\r\n                boxShadow:payload[0].value > 2700 ? \"0px 10px 10px #FF9457\" : \"none\",\r\n                borderRadius:\"10px\",\r\n                padding:\"10px\"\r\n          }}\r\n      >\r\n        {`$ ${payload[0].value}`}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\nconst CustomizedDot = (props) => {\r\n    const {\r\n      cx, cy,  value,\r\n    } = props;\r\n  \r\n    if (value > 2500) {\r\n      return (\r\n        <svg x={cx - 7} y={cy - 7} width=\"14\" height=\"14\">\r\n            <circle cx=\"7\" cy=\"7\" r=\"5\" stroke=\"#FF9457\" strokeWidth=\"2\" fill=\"white\" />\r\n        </svg> \r\n      );\r\n    }\r\n  \r\n    return (\r\n        <svg x={cx - 7} y={cy - 7} width=\"14\" height=\"14\">\r\n            <circle cx=\"7\" cy=\"7\" r=\"5\" stroke=\"black\" strokeWidth=\"2\" fill=\"white\" />\r\n        </svg> \r\n    );\r\n};\r\nconst CustomizedActiveDot = (props) => {\r\n    const {\r\n      cx, cy,  value,\r\n    } = props;\r\n  \r\n    if (value > 2500) {\r\n      return (\r\n        <svg x={cx - 7} y={cy - 7} width=\"14\" height=\"14\">\r\n            <circle cx=\"7\" cy=\"7\" r=\"5\" stroke=\"white\" strokeWidth=\"2\" fill=\"#FF9457\" />\r\n        </svg> \r\n      );\r\n    }\r\n  \r\n    return (\r\n        <svg x={cx - 7} y={cy - 7} width=\"14\" height=\"14\">\r\n            <circle cx=\"7\" cy=\"7\" r=\"5\" stroke=\"black\" strokeWidth=\"2\" fill=\"white\" />\r\n        </svg> \r\n    );\r\n};\r\nexport default class Example extends PureComponent {\r\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/vxq4ep63/';\r\n\r\n  render() {\r\n    return (\r\n        <div style = {{\r\n            padding:\"20px\",\r\n            boxShadow:\"0px 10px 10px rgba(0,0,0,.1)\"\r\n        }}>\r\n        <div\r\n            style = {{\r\n                width : \"100%\",\r\n                padding:\"10px 0px\",\r\n                borderTop:\"1px solid #e3dfe4\",\r\n                borderBottom:\"1px solid #e3dfe4\"\r\n            }}\r\n        >\r\n            <div style = {{\r\n                display:\"flex\",\r\n                justifyContent:\"center\",\r\n                alignItems:\"center\",\r\n                color:\"black\"\r\n            }}>\r\n                <div style = {{flex:1, fontSize:\"1.5rem\"}}>Sales</div>\r\n            </div>\r\n            <div style = {{color:\"black\"}}>\r\n                Food cost and delivery fees across delivery channels compared to in sore cost structure.\r\n            </div>\r\n        </div>\r\n        <div style = {{\r\n            borderBottom:\"1px solid #e3dfe4\",\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"center\",\r\n            color:\"black\"\r\n        }}>\r\n            <div\r\n                style = {{\r\n                    flex: 0.5,\r\n                    display:\"flex\",\r\n                    justifyContent:\"center\",\r\n                    alignItems:\"center\",\r\n                    borderRight:\"1px solid #e3dfe4\",\r\n                    padding:\"10px 10px 10px 0px\"\r\n                }}\r\n            >\r\n                <div style = {{fontSize:\"1.3rem\", fontWeight:500, flex:1}}>$41,294</div>\r\n                <div style = {{fontSize:\"1rem\", fontWeight:500, color:\"#FF9457\"}}>+ $1,264</div>\r\n            </div>\r\n            <div\r\n                style = {{\r\n                    flex: 0.5,\r\n                    display:\"flex\",\r\n                    justifyContent:\"center\",\r\n                    alignItems:\"center\",\r\n                    padding:\"10px 0px 10px 10px\"\r\n                }}\r\n            >\r\n                <div style = {{fontSize:\"1rem\", fontWeight:500, flex:1, color:\"gray\"}}>Last Year</div>\r\n                <div style = {{fontSize:\"1.2rem\", fontWeight:500, color:\"gray\"}}>+ $40,032</div>\r\n            </div>\r\n        </div>\r\n         <LineChart width={600} height={400} data={data} margin = {{top:20,right:20,bottom:20,left:30 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\"\r\n                horizontal = {false}\r\n            />\r\n            <XAxis dataKey=\"name\" interval = {0} tick={{stroke: 'gray', strokeWidth: 1}}/>\r\n            {/* <YAxis /> */}\r\n            <Tooltip content={<CustomTooltip />} />\r\n            {/* <Legend /> */}\r\n            <Line \r\n                type=\"linear\"\r\n                dataKey=\"pv\"\r\n                stroke=\"black\"\r\n                strokeWidth = \"2\"\r\n                activeDot = {<CustomizedActiveDot/>}\r\n                dot={<CustomizedDot />}\r\n            />\r\n             <Line \r\n                type=\"linear\"\r\n                dataKey=\"uv\"\r\n                stroke=\"gray\"\r\n                strokeWidth = \"2\"\r\n                activeDot = {null}\r\n                dot={null}\r\n                strokeDasharray=\"5 5\"\r\n            />\r\n            <Line \r\n                type=\"linear\"\r\n                dataKey=\"amt\"\r\n                stroke=\"gray\"\r\n                strokeWidth = \"1\"\r\n                activeDot = {null}\r\n                dot={null}\r\n                strokeDasharray=\"5 5\"\r\n            >\r\n            </Line>\r\n        </LineChart>\r\n        <div style = {{\r\n            display:\"flex\",\r\n            justifyContent:\"center\",\r\n            alignItems:\"center\",\r\n        }}>\r\n            {\r\n                data.map((_data, index)=>(\r\n                    <RadialBarChart width={60} height={60} cx={30} cy={30} innerRadius={0} outerRadius={30} barSize={1} data={[data1, _data]} key = {`key-${index}`}>\r\n                        <RadialBar \r\n                            minAngle={15}\r\n                            background\r\n                            clockWise\r\n                            dataKey=\"pv\" \r\n                            stroke = { Number(_data.pv) > 2700 ? \"#FF9457\" : \"black\"  } \r\n                        />\r\n                    </RadialBarChart>\r\n                ))\r\n            }\r\n        </div>\r\n       \r\n       </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Chart1 from './Chart1';\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Chart1 />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}